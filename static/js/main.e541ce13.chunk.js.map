{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["client","create","App","useState","fileUrl","updateFileUrl","e","a","file","target","files","add","added","url","path","console","log","className","type","onChange","src","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAIMA,EAASC,iBAAO,sCA8BPC,MA5Bf,WAAgB,IAAD,EACoBC,mBAAS,IAD7B,mBACNC,EADM,KACGC,EADH,iDAEb,WAAwBC,GAAxB,mBAAAC,EAAA,6DACQC,EAAOF,EAAEG,OAAOC,MAAM,GAD9B,kBAGwBV,EAAOW,IAAIH,GAHnC,OAGUI,EAHV,OAIUC,EAJV,sCAI+CD,EAAME,MACjDT,EAAcQ,GALlB,gDAOIE,QAAQC,IAAI,yBAAZ,MAPJ,0DAFa,sBAYb,OACE,sBAAKC,UAAU,MAAf,UACE,0CACA,uBACEC,KAAK,OACLC,SAjBO,8CAoBPf,GACE,qBAAKgB,IAAKhB,EAASiB,MAAM,cCfpBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e541ce13.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport { create } from 'ipfs-http-client';\n\nconst client = create('https://ipfs.infura.io:5001/api/v0');\n\nfunction App() {\n  const [fileUrl, updateFileUrl] = useState(``);\n  async function onChange(e) {\n    const file = e.target.files[0];\n    try {\n      const added = await client.add(file);\n      const url = `https://ipfs.infura.io/ipfs/${added.path}`;\n      updateFileUrl(url);\n    } catch (error) {\n      console.log('Error uploading file: ', error);\n    }\n  }\n  return (\n    <div className=\"App\">\n      <h1>IPFS Lab</h1>\n      <input\n        type=\"file\"\n        onChange={onChange}\n      />\n      {\n        fileUrl && (\n          <img src={fileUrl} width=\"600px\" />\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}